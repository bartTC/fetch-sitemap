[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "fetch-sitemap"
version = "26"
description = "Fetch a given sitemap and retrieve all URLs in it."
authors = ["Martin Mahner <martin@mahner.org>"]
license = "MIT"
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[tool.poetry.scripts]
fetch-sitemap = "fetch_sitemap:main"

[tool.poetry.dependencies]
python = "^3.9"
aiofiles = "*"
aiohttp = ">=3.9.0"
click = "*"
defusedxml = "*"
rich = "*"
rich-click = "*"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.2"
pytest-socket = "^0.7.0"
pytest-httpserver = "^1.0.10"

[project.urls]
"Homepage" = "https://github.com/bartTC/fetch-sitemap"
"Bug Tracker" = "https://github.com/bartTC/fetch-sitemap/issues"

[tool.ruff]
target-version = "py39"
exclude = ["migrations"]
lint.select = ["ALL"]
lint.ignore = [
  "ANN101",   # Missing Type Annotation for "self"
  "ANN401",   # Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`"
  "D",        # Missing or badly formatted docstrings
  "FBT",      # Flake Boolean Trap (don't use arg=True in functions)

  "COM812", # (ruff format) Checks for the absence of trailing commas
  "ISC001", # (ruff format) Checks for implicitly concatenated strings on a single line
]

[tool.ruff.lint.extend-per-file-ignores]
"test*.py" = [
  "S101",     # Use of `assert` detected
  "PLR2004",  # Magic value used in comparison, consider replacing <int> with a constant variable
]

[tool.pytest.ini_options]
python_files = ["test_*.py"]
addopts = """
    --allow-hosts=127.0.0.1,localhost
"""

[tool.coverage]
report.exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "except KeyboardInterrupt:",
]
run.omit = ["tests/*"]