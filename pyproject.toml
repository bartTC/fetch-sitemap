[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "fetch-sitemap"
version = "20"
description = "Fetch a given sitemap and retrieve all URLs in it."
authors = ["Martin Mahner <martin@mahner.org>"]
license = "MIT"
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[tool.poetry.dependencies]
python = "^3.9"
aiohttp = ">=3.9.0"
rich = "*"
rich-click = "*"
defusedxml = "*"
aiofiles = "*"

[tool.poetry.scripts]
fetch-sitemap = "fetch_sitemap:main"

[project.urls]
"Homepage" = "https://github.com/bartTC/fetch-sitemap"
"Bug Tracker" = "https://github.com/bartTC/fetch-sitemap/issues"

[tool.black]
target-version = ['py312']
include = '\.pyi?$'
exclude = "migrations"

[tool.ruff]
target-version = "py39"
exclude = ["migrations"]
lint.select = ["ALL"]
lint.ignore = [
  "ANN101",   # Missing Type Annotation for "self"
  "ANN401",   # Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`"
  "D",        # Missing or badly formatted docstrings
  "FBT",      # Flake Boolean Trap (don't use arg=True in functions)

  "COM812", # (ruff format) Checks for the absence of trailing commas
  "ISC001", # (ruff format) Checks for implicitly concatenated strings on a single line
]

[tool.mypy]
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
strict_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
exclude = ".*/migrations/.*"